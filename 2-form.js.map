{"version":3,"file":"2-form.js","sources":["../src/js/2-form.js"],"sourcesContent":["// Ключ для локального сховища\nconst STORAGE_KEY = \"feedback-form-state\";\n\n// Об'єкт для збереження даних форми\nlet formData = { email: \"\", message: \"\" };\n\n// Посилання на форму\nconst form = document.querySelector(\".feedback-form\");\n\n// 1. **Функція для заповнення полів форми з локального сховища**\nconst fillFormFields = () => {\n  try {\n    // Якщо локальне сховище порожнє — виходимо з функції\n    if (!localStorage.getItem(STORAGE_KEY)) {\n      return;\n    }\n\n    // Отримання даних із локального сховища\n    const formDataFromLS = JSON.parse(localStorage.getItem(STORAGE_KEY));\n\n    // Оновлення об'єкта formData\n    formData = formDataFromLS;\n\n    // Заповнення полів форми\n    for (const key in formDataFromLS) {\n      if (form.elements[key]) {\n        form.elements[key].value = formDataFromLS[key];\n      }\n    }\n  } catch (err) {\n    console.log(\"Error parsing localStorage data:\", err);\n  }\n};\n\n// Виклик функції для заповнення форми при завантаженні сторінки\ndocument.addEventListener(\"DOMContentLoaded\", fillFormFields);\n\n// 2. **Обробка події input**\nform.addEventListener(\"input\", (event) => {\n  const { name, value } = event.target; // Отримання імені та значення поля\n  formData[name] = value.trim(); // Оновлення об'єкта formData\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(formData)); // Збереження у локальне сховище\n});\n\n// 3. **Обробка події submit**\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault(); // Заборона стандартної поведінки\n\n  // Перевірка заповнення полів\n  if (!form.email.value.trim() || !form.message.value.trim()) {\n    alert(\"Fill please all fields\"); // Повідомлення про необхідність заповнення\n    return;\n  }\n\n  console.log(\"Form Data:\", formData); // Виведення даних у консоль\n  localStorage.removeItem(STORAGE_KEY); // Очищення локального сховища\n  form.reset(); // Очищення форми\n  formData = { email: \"\", message: \"\" }; // Скидання об'єкта formData\n});\n"],"names":["STORAGE_KEY","formData","form","fillFormFields","formDataFromLS","key","err","event","name","value"],"mappings":"oDACA,MAAMA,EAAc,sBAGpB,IAAIC,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAGvC,MAAMC,EAAO,SAAS,cAAc,gBAAgB,EAG9CC,EAAiB,IAAM,CAC3B,GAAI,CAEF,GAAI,CAAC,aAAa,QAAQH,CAAW,EACnC,OAIF,MAAMI,EAAiB,KAAK,MAAM,aAAa,QAAQJ,CAAW,CAAC,EAGnEC,EAAWG,EAGX,UAAWC,KAAOD,EACZF,EAAK,SAASG,CAAG,IACnBH,EAAK,SAASG,CAAG,EAAE,MAAQD,EAAeC,CAAG,EAGlD,OAAQC,EAAK,CACZ,QAAQ,IAAI,mCAAoCA,CAAG,CACpD,CACH,EAGA,SAAS,iBAAiB,mBAAoBH,CAAc,EAG5DD,EAAK,iBAAiB,QAAUK,GAAU,CACxC,KAAM,CAAE,KAAAC,EAAM,MAAAC,GAAUF,EAAM,OAC9BN,EAASO,CAAI,EAAIC,EAAM,KAAI,EAC3B,aAAa,QAAQT,EAAa,KAAK,UAAUC,CAAQ,CAAC,CAC5D,CAAC,EAGDC,EAAK,iBAAiB,SAAWK,GAAU,CAIzC,GAHAA,EAAM,eAAc,EAGhB,CAACL,EAAK,MAAM,MAAM,KAAI,GAAM,CAACA,EAAK,QAAQ,MAAM,OAAQ,CAC1D,MAAM,wBAAwB,EAC9B,MACD,CAED,QAAQ,IAAI,aAAcD,CAAQ,EAClC,aAAa,WAAWD,CAAW,EACnCE,EAAK,MAAK,EACVD,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,CACrC,CAAC"}